name: CI

# trigger on push to master
on:
  push:
    branches: [ master ]
  workflow_dispatch:

concurrency: deploy
jobs:
  build_backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build backend
      run: make build-backend
    - name: Test backend
      run: make test-backend
    - name: Push backend
      run: make backend-push
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
  build_frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build and push frontend
      run: make build-push-frontend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
  build_go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test go
      run: make test-go
    - name: Build and push go
      run: make build-push-go
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1

  staging:
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend, build_go]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.6'

    - name: Deploy to staging
      run: make staging
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1

  production:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs: [staging]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.6'

    - name: Deploy to production
      run: make production
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Download crawler task definition
      run: |
        aws ecs describe-task-definition --task-definition prod_crawler_task --query taskDefinition > crawler-task-definition.json
    - name: Deploy crawler task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: crawler-task-definition.json
        service: prod_crawler_service
        cluster: prod_fargate
        wait-for-service-stability: true

    - name: Download reverifier task definition
      run: |
        aws ecs describe-task-definition --task-definition production_cron_reverifier --query taskDefinition > reverifier-task-definition.json
    - name: Deploy reverifier task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: reverifier-task-definition.json
        cluster: prod_fargate
