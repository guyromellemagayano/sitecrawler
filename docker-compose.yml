version: "2.4"
services:
  traefik:
    image: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000"
    ports:
      - 8000:8000
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  backend:
    build:
      context: ./backend
      target: dev
    image: crawl-app-backend
    stdin_open: false
    tty: true
    command: ./docker.dev.sh
    volumes:
      - ./backend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api/`)||PathPrefix(`/auth/`)||PathPrefix(`/admin/`)||PathPrefix(`/static/`)"
  frontend:
    build:
      context: ./frontend
      target: dev
    image: crawl-app-frontend
    command: ./docker.dev.sh
    volumes:
      - ./frontend:/app
      - node-data:/app/node_modules
      - next-data:/app/.next
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
  frontend-storybook:
    build:
      context: ./frontend
      target: dev
    image: crawl-app-frontend-storybook
    command: yarn run storybook
    ports:
      - 6006:6006
    volumes:
      - node-data:/app/node_modules
      - ./frontend:/app
  crawler:
    build:
      context: ./go
      target: dev
      args:
        SERVICE: crawler
    image: crawl-app-crawler
    volumes:
      - ./go:/app
    # environment:
    #   - LOG_SQL=true
  scheduler:
    build:
      context: ./go
      target: dev
      args:
        SERVICE: scheduler
    image: crawl-app-scheduler
    volumes:
      - ./go:/app
    # environment:
    #   - LOG_SQL=true
  uptimer:
    build:
      context: ./go
      target: dev
      args:
        SERVICE: uptimer
    image: crawl-app-uptimer
    volumes:
      - ./go:/app
    # environment:
    #   - LOG_SQL=true
  verifier:
    build:
      context: ./go
      target: dev
      args:
        SERVICE: verifier
    image: crawl-app-verifier
    volumes:
      - ./go:/app
    # environment:
    #   - LOG_SQL=true
  reverifier:
    build:
      context: ./go
      target: dev
      args:
        SERVICE: reverifier
    image: crawl-app-reverifier
    volumes:
      - ./go:/app
    # environment:
    #   - LOG_SQL=true
  db:
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: crawldev
    command:
      - "postgres"
      - "-c"
      - "listen_addresses=*"
    volumes:
      - db-data:/var/lib/postgresql/data
  localstack:
    image: localstack/localstack

volumes:
  db-data:
    driver: local
  node-data:
    driver: local
  next-data:
    driver: local
